@model IEnumerable<UPM.Entities.Padron>

@{
    ViewBag.Title = "Index";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}


<div>

    <input type="hidden" id="hView" value='@ViewContext.RouteData.Values["controller"].ToString()' />
</div>
<!-- begin:: Subheader -->
<div class="kt-subheader   kt-grid__item" id="kt_subheader">
    <div class="kt-subheader__main">
        <h3 class="kt-subheader__title">
            Cátalogos
        </h3>
        <span class="kt-subheader__separator kt-hidden"></span>
        <div class="kt-subheader__breadcrumbs">
            <a href="#" class="kt-subheader__breadcrumbs-home"><i class="flaticon2-shelter"></i></a>
            <span class="kt-subheader__breadcrumbs-separator"></span>
            <a href="@Url.Action("Index", "Padrons")" class="kt-subheader__breadcrumbs-link">
                Padron
            </a>
            <span class="kt-subheader__breadcrumbs-separator"></span>
            <a href="@Url.Action("Index", "Padrons")" class="kt-subheader__breadcrumbs-link">
                Listado
            </a>

        </div>
    </div>

</div>
<!-- end:: Subheader -->
<!-- begin:: Content -->
<div class="kt-content  kt-grid__item kt-grid__item--fluid" id="kt_content">

    <div class="kt-portlet kt-portlet--mobile">

        <div class="kt-portlet__body">
            <div class="kt-portlet__head-toolbar">
                <div class="kt-portlet__head-wrapper">
                    <div class="kt-portlet__head-actions" style="text-align:right">

                        <a href="@Url.Action("Create", "Padrons")" class="btn btn-brand btn-elevate btn-icon-sm">
                            <i class="la la-plus"></i>
                            Agregar Persona
                        </a>
                    </div>
                </div>
            </div>
            <div class="table-responsive">
                <!--begin: Datatable -->
                <table class="dataTable table table-striped- table-bordered table-hover table-checkable no-wrap display" data-order="[[2, &quot;asc&quot;]]">
                    <thead>
                        <tr>
                            <th></th>

                            <th data-orderable="false" data-searchable="false" data-visible="false">ID</th>
                            <th class="all">Nombre</th>
                            <th class="all">Clave Electoral</th>
                            <th class="all">Telefóno</th>
                            <th class="all">Celular</th>
                            <th class="all">Es Votante?</th>
                            <th class="all">Registro Completo?</th>
                            <th class="all">Pregunta - Comentario</th>
                            <th class="all">Editar</th>
                            <th class="all">Eliminar</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                        <tr>
                            <td></td>
                            <td data-info="ID">
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td data-info="Nombre">
                                @Html.DisplayFor(modelItem => item.nombre) @Html.DisplayFor(modelItem => item.paterno) @Html.DisplayFor(modelItem => item.materno)
                            </td>
                            <td data-info="Clave Electoral">
                                @Html.DisplayFor(modelItem => item.claveElectoral)
                                @Html.ValidationMessageFor(modelItem => item.claveElectoral, "", new { @class = "text-danger" })
                            </td>
                            <td data-info="Telefono">
                                @Html.DisplayFor(modelItem => item.telefono)
                                @Html.ValidationMessageFor(modelItem => item.telefono, "", new { @class = "text-danger" })
                            </td>
                            <td data-info="Celular">
                                @Html.DisplayFor(modelItem => item.celular)
                                @Html.ValidationMessageFor(modelItem => item.celular, "", new { @class = "text-danger" })
                            </td>
                            <td data-info="votante">

                                @Html.DisplayFor(modelItem => item.TipoVotante.tipo_votante)
                                @Html.ValidationMessageFor(modelItem => item.TipoVotante.tipo_votante, "", new { @class = "text-danger" })

                            </td>
                            <td data-info="Registro completo">

                                @if (item.registroCompleto == true)
                                {
                                    <a>SI</a>
                                }
                                else
                                {
                                    <a>NO</a>
                                }


                            </td>
                            <td data-info="Comentario">

                                @Html.DisplayFor(modelItem => item.comentario)
                                @Html.ValidationMessageFor(modelItem => item.comentario, "", new { @class = "text-danger" })

                            </td>
                            <td>
                                <a href="@Url.Action("Edit", "Padrons", new { id = item.Id })">
                                    <span class="fa fa-edit fa-lg" aria-hidden="true"></span>
                                </a>
                            </td>
                            <td>
                                <span class="fa fa-trash fa-lg" aria-hidden="true" onclick="openModalEliminar(@item.Id)"></span>
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>

                <!--end: Datatable -->
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalAddEliminar" tabindex="-1" role="dialog" aria-labelledby="modalAddEliminar" aria-hidden="true" style="display: none;">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Eliminar Elemento</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                </button>
            </div>
            <div class="modal-body">
                <form id="frmFEliminar" enctype="multipart/form-data">
                    <div class="form-group row">
                        <div class="col-lg-12">
                            <input type="hidden" name="id" id="id" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-lg-12">
                            <h5>¿Estas seguro que deseas eliminar esta Persona del Padrón?</h5>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                <button id="btnFinalizarEvaluacion" type="button" class="btn btn-primary" onclick="eliminar('@Url.Action("EliminarAsync", "Padrons")');">Finalizar</button>
            </div>
        </div>
    </div>
</div>
<script>
    function eliminar(url) {
        Swal.fire({
            title: 'Procesando!',
            html: '',
            onBeforeOpen: () => {
                Swal.showLoading()
                return new Promise((resolve) => {
                    var formData = new FormData($('form#frmFEliminar')[0]);

                    $.ajax({
                        type: "POST",
                        url: url,
                        data: formData,
                        dataType: 'json',
                        contentType: false,// "multipart/form-data",
                        processData: false,
                        success: function (result) {
                            if (result.accion) {
                                Swal.fire({
                                    title: 'Realizado!',
                                    text: 'Se ha eliminado correctamente',
                                    type: 'success',
                                    onClose: () => {
                                        window.location.reload();
                                    }
                                });
                            }
                            else
                                Swal.fire('Ops!','No se puede eliminar la persona.', 'error');
                        },
                        error: function (error) {
                            Swal.fire('Ops!', 'No se puede eliminar la persona.', 'error');
                        }
                    });

                })
            },
        }).then((result) => {
            if (result.value) {
                Swal.fire({
                    title: 'Realizado!',
                    text: 'Se ha eliminado correctamente',
                    type: 'success',
                    onClose: () => {
                        window.location.reload();
                    }
                });
            }
        });
    }
</script>
<script type="text/javascript">
    function openModalEliminar(id) {
        var modal = $('#modalAddEliminar');
        modal.find('form')[0].reset();
        modal.find('input#id').val(id);
        modal.modal('show');
    }
</script>
